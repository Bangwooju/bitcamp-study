package com.eomcs.pms;

import java.sql.Date;
import java.util.Scanner;

public class App {
  // 1) addMember로 회원정보 입력을 분리한다. 매서드 정의 및 회원등록 코드 가져오기
  //=>main()과 addMember() 가 서로 공유하는 변수는 클래스 변수로 만든다.
  // 2) 입력된 회원 데이터의 목록을 출력하는 코드를 별도의 메서드로 분리
  //=>listMembers()메서드 정의 및 관련된 코드 가져오기
  //3) 프로젝트 add하기
  //4) 프로젝트 list만들기 
  //5) 작업 add 만들기
  //6) 작업 list 만들기
  //7) 사용자로부터 명령어를 입력받는 코드를 별도의 메서드로 분리
  //=> 즉각적으로 다음 명령을 묻는 것을 prompt라고 한다.
  // prompt() 메서드 정의하고 코드 가져오기
  //8) 명령어 뿐만 아니라 사용자로부터 입력을 받는 기능을 prompt()로 처리
  // => prompt를 호출할 때 사용자에게 출력할 프롬프트 메시지를 설정하도록 변경

  static Scanner keyboardScan = new Scanner(System.in);

  //회원정보
  static  final int LENGTH = 100;
  static int[] no = new int[LENGTH];
  static String[] name = new String[LENGTH];
  static String[] email = new String[LENGTH];
  static String[] password = new String[LENGTH];
  static String[] photo = new String[LENGTH];
  static String[] tel = new String[LENGTH];
  static Date[] registeredDate = new Date[LENGTH];
  static int size = 0;

  //프로젝트 정보
  static final int PROJECT_LENGTH = 1000;

  static int[] pNo = new int[PROJECT_LENGTH];
  static String[] pTitle = new String[PROJECT_LENGTH];
  static String[] pContent = new String[PROJECT_LENGTH];
  static Date[] pStartDate = new Date[PROJECT_LENGTH];
  static Date[] pEndDate = new Date[PROJECT_LENGTH];
  static String[] pOwner = new String[PROJECT_LENGTH];
  static String[] pMembers = new String[PROJECT_LENGTH];
  static int pSize = 0;

  //업무 정보
  static final int TASK_LENGTH = 100;
  static int[] tNo = new int[TASK_LENGTH];
  static String[] tContent = new String[TASK_LENGTH];
  static Date[] tDeadline = new Date[TASK_LENGTH];
  static String[] tOwner = new String[TASK_LENGTH];
  static int[] tStatus = new int[TASK_LENGTH];
  static int tSize = 0;

  //사용자가 입력한 값을 보관하는 변수
  static String input;

  public static void main(String[] args) {

    while (true) { 
      prompt("명령> ");

      if (input.equals("quit")|| input.equals("exit")) {
        System.out.println("안녕!");
        break;
      } else if (input.equals("/member/add")) {
        //메서드로 분리한 코드를 실행하기 (메서드 호출)
        // 메서드 명();
        addMember();

      } else if (input.equals("/member/list")) {
        listMembers();

      } else if (input.equals("/project/add")) {
        addProject();

      }else if (input.equals("/project/list")) {
        listProjects();

      } else if (input.equals("/task/add")) {
        addTask();

      } else if (input.equals("/task/list")){
        listTasks();
      }
      else {
        System.out.println("실행할 수 없는 명령입니다.");
      }
      System.out.println();
    }
    keyboardScan.close();
  }

  static void addMember() {
    System.out.println("[회원 등록]");

    prompt("번호? ");
    no[size] = Integer.parseInt(input);

    prompt("이름? ");
    name[size] = input;

    prompt("메일? ");
    email[size] = input;

    prompt("암호? ");
    password[size] = input;

    prompt("사진? ");
    photo[size] = input;

    prompt("전화? ");
    tel[size] = input;

    registeredDate[size] = new Date(System.currentTimeMillis());

    size++;
  }

  static void listMembers() {
    System.out.println("[회원 목록]");
    for (int i = 0; i < size; i++) {
      // 번호, 이름, 이메일, 전화, 가입일
      System.out.printf("%d, %s, %s, %s, %s\n", // 출력 형식 지정
          no[i], name[i], email[i], tel[i], registeredDate[i]);
    }

  }

  static void addProject() {
    System.out.println("[프로젝트 등록]");
    prompt("번호? ");
    pNo[pSize] = Integer.valueOf(input);

    prompt("프로젝트명? ");
    pTitle[pSize] = input;

    prompt("내용? ");
    pContent[pSize] = input;

    prompt("시작일? ");
    pStartDate[pSize] = Date.valueOf(input);

    prompt("종료일? ");
    pEndDate[pSize] = Date.valueOf(input);

    prompt("만든이? ");
    pOwner[pSize] = input;

    prompt("팀원? ");
    pMembers[pSize] = input;

    pSize++;

  }

  static void listProjects() {
    System.out.println("[프로젝트 목록]");
    for (int i = 0; i < pSize; i++) {
      // 번호, 프로젝트명, 시작일, 종료일, 만든이
      System.out.printf("%d, %s, %s, %s, %s\n", // 출력 형식 지정
          pNo[i], pTitle[i], pStartDate[i], pEndDate[i], pOwner[i]);

    }
  }

  static void addTask() {
    System.out.println("[작업 등록]");
    prompt("번호? ");
    tNo[tSize] = Integer.parseInt(input);

    prompt("내용? ");
    tContent[tSize] = input;

    prompt("마감일? ");
    tDeadline[tSize] = Date.valueOf(input);

    System.out.println("상태?");
    System.out.println("0: 신규");
    System.out.println("1: 진행중");
    System.out.println("2: 완료");
    prompt(">" );
    tStatus[tSize] = Integer.valueOf(input);

    prompt("담당자? ");
    tOwner[tSize] = input;

    tSize++;

  }

  static void listTasks() {

    System.out.println("[작업 목록]");
    for (int i = 0; i < tSize; i++) {
      String stateLabel = null;
      switch (tStatus[i]) {
        case 1:
          stateLabel = "진행중";
          break;
        case 2:
          stateLabel = "완료";
          break;
        default:
          stateLabel = "신규";
      }
      System.out.printf("%d, %s, %s, %s, %s\n", // 출력 형식 지정
          tNo[i], tContent[i], tDeadline[i], stateLabel, tOwner[i]);
    }


  }

  static void prompt(String title) {
    System.out.print(title);
    input = keyboardScan.nextLine();

  }


}
