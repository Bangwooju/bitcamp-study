<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="MemberDao">
  
  <resultMap type="member" id="MemberMap">
    <id column="member_no"           property="no"/>
    <result column="name"     property="name"/>
    <result column="email"    property="email"/>
    <result column="photo"    property="photo"/>
    <result column="tel"      property="tel"/>
    <result column="created_dt"      property="registeredDate"/>
  </resultMap>

  <select id="findAll" resultMap="MemberMap">
    select 
      member_no, 
      name, 
      email, 
      tel,
      photo,
      created_dt
    from 
      pms_member
    order by 
      member_no desc
  </select>
  
  <insert id="insert" parameterType="member">
    insert into pms_member(name,email,password,photo,tel)
    values(#{name},#{email},password(#{password}),#{photo},#{tel})
  </insert>
  
  <select id="findByNo" parameterType="int" resultMap="MemberMap">
    select 
      member_no, 
      name, 
      email, 
      photo, 
      tel, 
      created_dt
    from 
      pms_member
    where 
      member_no = #{no}
  </select>
  
  <select id="findByName" parameterType="string" resultMap="MemberMap">
    select 
      member_no, 
      name, 
      email, 
      photo, 
      tel, 
      created_dt
    from 
      pms_member
    where 
      name = #{name}
  </select>
  
  <select id="findByProjectNo" parameterType="int" resultMap="MemberMap">
    select 
      m.member_no, 
      m.name
    from 
      pms_member_project mp 
      inner join pms_member m on mp.member_no=m.member_no
    where 
      mp.project_no=#{no}
    order by 
      m.name asc
  </select>

  <select id="findByEmailPassword" parameterType="map" resultMap="MemberMap">
    select 
      member_no, 
      name, 
      email, 
      photo, 
      tel, 
      created_dt
    from 
      pms_member
    where 
      email = #{email}
      and password = password(#{password})
  </select>
  
  <update id="update" parameterType="member">
    update pms_member
    <set>
      <if test="name != null">name = #{name},</if>
      <if test="email != null">email = #{email},</if>
      <if test="password != null">password = password(#{password}),</if>
      <if test="photo != null">photo = #{photo},</if>
      <if test="tel != null">tel = #{tel}</if>
    </set>
    where member_no = #{no}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from pms_member 
    where member_no=#{no}
  </delete>
  
</mapper>






